You must build a solution that:  
• Accepts a PDF file (up to 50 pages)  
• Extracts:  
o Title  
o Headings: H1, H2, H3 (with level and page number)  
• Outputs a valid JSON file in the format below:  
{  
}  
"title": "Understanding AI",  
"outline": [  
{ "level": "H1", "text": "Introduction", "page": 1 },  
{ "level": "H2", "text": "What is AI?", "page": 2 },  
{ "level": "H3", "text": "History of AI", "page": 3 }  
]  
You Will Be Provided  
1. A sample input PDF (e.g., sample.pdf)  
2. A sample ground truth output (sample.json) for format clarity  
3. Sample Dockerfile  
4. Sample Solution 
Docker Requirements  
•  
• Please ensure your Dockerfile is compatible with AMD64 
architecture. Since we will build and run the image on an AMD64 
machine, your base image and any dependencies should support 
linux/amd64. Optionally, you can include the following in your 
Dockerfile to explicitly specify the platform: FROM -
platform=linux/amd64 <base_image>  
• CPU architecture: amd64 (x86_64)  
• No GPU dependencies  
• Model size (if used) ≤ 200MB  
• Should work offline — no network/internet calls  
Expected Execution  
We will build the docker image using the following command: 
```docker build --platform linux/amd64 -t 
mysolutionname:somerandomidentifier``` 
After building the image, we will run the solution using the run command 
specified in the submitted instructions. 
```docker run --rm -v $(pwd)/input:/app/input -v $(pwd)/output:/app/output -
network none mysolutionname:somerandomidentifier```  
Your container should:  
• Automatically process all PDFs from /app/input directory, 
generating a corresponding filename.json in /app/output for each 
filename.pdf  
• output.json  
Constraints  
Constraint  
Execution 
time  
Requirement  
≤ 10 seconds for a 50-page 
PDF  
Network  
Model size  ≤ 200MB (if used)  
No internet access 
allowed  
Runtime  
Must run on CPU (amd64), 
your solution should run on 
the system with 8 CPUs and 
16 GB RAM configurations  